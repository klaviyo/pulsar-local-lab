global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'pulsar-basic'

rule_files:
  - "/etc/prometheus/rules/*.yml"

scrape_configs:
  # ZooKeeper metrics
  - job_name: 'zookeeper'
    static_configs:
      - targets: ['zookeeper:8000']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s

  # BookKeeper metrics
  - job_name: 'bookkeeper'
    static_configs:
      - targets:
          - 'bookie-1:8000'
          - 'bookie-2:8000'
          - 'bookie-3:8000'
    metrics_path: '/metrics'
    scrape_interval: 15s
    scrape_timeout: 10s

  # Pulsar Broker metrics
  - job_name: 'pulsar-broker'
    static_configs:
      - targets:
          - 'broker-1:8080'
          - 'broker-2:8080'
    metrics_path: '/metrics/'
    scrape_interval: 15s
    scrape_timeout: 10s
    params:
      format: ['prometheus']

  # Pulsar Function Worker metrics (if available)
  - job_name: 'pulsar-function-worker'
    static_configs:
      - targets:
          - 'broker-1:8080'
          - 'broker-2:8080'
    metrics_path: '/metrics/'
    scrape_interval: 30s
    scrape_timeout: 10s
    params:
      format: ['prometheus']

  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

alerting:
  alertmanagers:
    - static_configs:
        - targets: []

# Recording rules for better dashboard performance
recording_rules:
  - name: pulsar.rules
    interval: 30s
    rules:
      # Broker rules
      - record: pulsar:broker_topic_load_times_rate
        expr: rate(pulsar_broker_topic_load_times_sum[5m]) / rate(pulsar_broker_topic_load_times_count[5m])

      - record: pulsar:broker_msg_rate_in
        expr: sum(rate(pulsar_broker_in_messages_total[5m])) by (cluster, broker)

      - record: pulsar:broker_msg_rate_out
        expr: sum(rate(pulsar_broker_out_messages_total[5m])) by (cluster, broker)

      - record: pulsar:broker_throughput_in
        expr: sum(rate(pulsar_broker_in_bytes_total[5m])) by (cluster, broker)

      - record: pulsar:broker_throughput_out
        expr: sum(rate(pulsar_broker_out_bytes_total[5m])) by (cluster, broker)

      # BookKeeper rules
      - record: pulsar:bookie_write_rate
        expr: sum(rate(bookie_BOOKIE_WRITE_BYTES[5m])) by (instance)

      - record: pulsar:bookie_read_rate
        expr: sum(rate(bookie_BOOKIE_READ_BYTES[5m])) by (instance)

      - record: pulsar:bookie_write_latency_p99
        expr: histogram_quantile(0.99, rate(bookie_BOOKIE_ADD_ENTRY_REQUEST[5m])) by (instance)

      - record: pulsar:bookie_read_latency_p99
        expr: histogram_quantile(0.99, rate(bookie_BOOKIE_READ_ENTRY_REQUEST[5m])) by (instance)

      # Topic level aggregations
      - record: pulsar:topic_msg_rate_in
        expr: sum(rate(pulsar_broker_in_messages_total[5m])) by (topic)

      - record: pulsar:topic_msg_rate_out
        expr: sum(rate(pulsar_broker_out_messages_total[5m])) by (topic)

      - record: pulsar:topic_throughput_in
        expr: sum(rate(pulsar_broker_in_bytes_total[5m])) by (topic)

      - record: pulsar:topic_throughput_out
        expr: sum(rate(pulsar_broker_out_bytes_total[5m])) by (topic)

      # Consumer lag
      - record: pulsar:consumer_msg_backlog
        expr: sum(pulsar_broker_subscription_back_log) by (topic, subscription)